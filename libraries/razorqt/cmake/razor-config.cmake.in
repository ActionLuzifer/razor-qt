# - Find the Razor-qt include and library dirs and define a some macros
#
# The module defines the following variables
#
#  RAZOR_FOUND         - Set to TRUE if all of the above has been found
#
#  RAZOR_INCLUDE_DIR   - The Razor-qt include directory
#
#  RAZOR_INCLUDE_DIRS  - The Razor-qt and the Qt include directory, for use with INCLUDE_DIRECTORIES()
#
#  RAZOR_LIBRARIES     - The libraries needed to use Razor-qt
#
#  RAZOR_SHARE_DIR     - This allows to install and read the configs from non-standard locations
#
#  RAZOR_ETC_XDG_DIR   - XDG standards expects system-wide configuration files in the
#                        /etc/xdg/razor location. Unfortunately QSettings we are using internally
#                        can be overriden in the Qt compilation time to use different path for
#                        system-wide configs. (for example configure ... -sysconfdir /etc/settings ...)
#                        This path can be found calling Qt4's qmake:
#                             qmake -query QT_INSTALL_CONFIGURATION
#
# RAZOR_USE_FILE       - The variable RAZOR_USE_FILE is set which is the path to a CMake file that
#                        can be included to compile Razor-qt applications and libraries. It sets up
#                        the compilation environment for include directories and populates a
#                        RAZOR_LIBRARIES variable.
#
# When using the components argument, RAZOR_USE_* variables are automatically set
# for the RAZOR_USE_FILE to pick up.  If one wishes to manually set them, the
# available ones to set include:
#               RAZOR_USE_MOUNT
####               RAZOR_USE_QXT
#
# Typical usage could be something like:
#   set(RAZOR_USE_MOUNT 1)
#   find_package(RAZOR REQUIRED)
#   include(${RAZOR_USE_FILE})
#
#   razor_translate_ts(QM_FILES
#     SOURCES
#        ${H_FILES}
#        ${CPP_FILES}
#        ${UI_FILES}
#   )
#   razor_translate_desktop(DESKTOP_FILES
#     SOURCES
#        ${DESKTOP_FILES_IN}
#  )
#
#   add_executable(myexe main.cpp)
#   target_link_libraries(myexe $RAZOR_LIBRARIES})

set(RAZOR_MAJOR_VERSION @RAZOR_MAJOR_VERSION@)
set(RAZOR_MINOR_VERSION @RAZOR_MINOR_VERSION@)
set(RAZOR_PATCH_VERSION @RAZOR_PATCH_VERSION@)
set(RAZOR_VERSION @RAZOR_MAJOR_VERSION@.@RAZOR_MINOR_VERSION@.@RAZOR_PATCH_VERSION@)

set(RAZOR_SHARE_DIR     @RAZOR_SHARE_DIR@)
set(RAZOR_ETC_XDG_DIR   @RAZOR_ETC_XDG_DIR@)
set(RAZOR_INCLUDE_DIR   @RAZOR_INCLUDE_DIR@)
set(RAZOR_LIBRARY       razorqt)

set(RAZOR_LIBRARIES     ${RAZOR_LIBRARY} )
set(RAZOR_INCLUDE_DIRS  ${RAZOR_INCLUDE_DIR} )
set(RAZOR_USE_FILE      ${CMAKE_CURRENT_LIST_DIR}/razor_use.cmake)
set(RAZOR_FOUND         1)

mark_as_advanced(RAZOR_LIBRARY RQZOR_INCLUDE_DIR)


#************************************************
# RAZOR_USE_MOUNT
#
if (RAZOR_USE_MOUNT)
    include(${CMAKE_CURRENT_LIST_DIR}/razormount-config.cmake)
    set(RAZOR_INCLUDE_DIRS       ${RAZOR_INCLUDE_DIRS} ${RAZORMOUNT_INCLUDE_DIR})
    set(RAZOR_LIBRARIES          ${RAZOR_LIBRARIES}    ${RAZORMOUNT_LIBRARY})

endif(RAZOR_USE_MOUNT)


#************************************************
# RAZOR_USE_QXT
#
#if (RAZOR_USE_QXT)
#    include(${CMAKE_CURRENT_LIST_DIR}/razorqxt-config.cmake)
#    set(RAZOR_INCLUDE_DIRS       ${RAZOR_INCLUDE_DIRS} ${RAZORQXT_INCLUDE_DIR})
#    set(RAZOR_LIBRARIES          ${RAZOR_LIBRARIES}    ${RAZORQXT_LIBRARY})

#endif (RAZOR_USE_QXT)
